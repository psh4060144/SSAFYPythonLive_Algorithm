# 스택을 이용한 괄호 검사
# 1. 왼쪽 괄호의 갯수와 오른쪽 괄호의 갯수가 같아야 한다.
# 2. 같은 괄호에서 왼쪽 괄호는 오른쪽 괄호보다 먼저 나와야 한다.
# 3. 괄호 사이에는 포함 관계만 존재한다.

# idea
# 문자열에 있는 괄호를 차례대로 조사하면서 왼쪽 괄호를 만나면 스택에 넣고, 오른쪽 괄호를 만나면 스택의 top 괄호를 삭제한 후 오른쪽 괄호와 짝이 맞는지 비교.
# 스택이 비어있다면 조건 1, 조건 2에 위배가 되고 괄호의 짝이 맞지 않으면 조건 3에 위배된다.
# 마지막 괄호까지 조사한 후에도 스택에 괄호가 남아있으면 조건 1에 위배된다.

txt = input()

top = -1
stack = [0] * 100  # 문제의 조건에 따라 유동적으로 설정하기. 대략 100만개 정도로 한다고 함.........

ans = 1  # 짝이 맞다고 가정하고 시작

for x in txt:
    if x == '(':  # 여는 괄호를 push.
        top += 1
        stack[top] = x  # append 보다 indexing 이 훨씬 빠르다.
    elif x == ')': # 중간에 공백이 있을 경우를 대비하기 위해 else 가 아닌 elif 를 사용. 닫는 괄호인 경우에는~
        if top == -1:  # 스택이 비어있으면
            ans = 0
            break  # 18번 line for 문 중지.
        else:
            top -= 1  # 여는 괄호만 있으므로 비교 작업을 하지 않고 그냥 바로 pop 해도 된다.
                      # 여기서 stack 안의 괄호를 빼지 않는 이유? 어차피 top 만 수정하면 line 19의 if 문을 통해 여는 괄호가 덮어 씌워진다. 자동으로 삭제된다는 뜻.

if top > -1:  # 여는 괄호가 남아있으면
    ans = 0

print(ans)
